// Always have a plan
// -Making a plan gives you structure, helps to give you a path to take. Even if it quickly becsome clear it si not the right path, its a way to get yourself jumpstarted

// Restate the problem
// -This is a great way to make the problem clear, and concise. Also a great way to figure out what is being asked and what is needed/ Rubberducking.

// Divide the problem
// -Break the problem up in to smaller sections, this can help with the mental black that may come from how large a problem may seem. You may not know how to get from A to C, but you can walk from A to B, then from B to C.

// Start with what you know
// -Once the problem is in smaller pieces, you might be able tosolve one of those smaller problems. Starting with what you know might be helpful in getting momentum to solve a problem.

// Reduce the problem
// -If you are finding the constraints of the question too difficult to navigate, try taking one away. If you can't get a reversed string back, can you get an array of strings back first?

// Look for analogies
//  -If you can't find a way to the solution, try creating an analogy solution. What would give you a similar result that you've already done before

// Experiment
//  -Sometimes there's only so much prep we can do with a problem, and we'r going to have to dive in. Just trying a solution and finding out it's wrong, gives you good clues as to what works and what doesn't

// Don't get Frustrated
// -Being incorrect is a large part of development. Getting better means that you've tried many ways to do something and gotten used to where the pitfalls are. If you've started to get frustrated, that means you've started deviating from your plan and techniques. Step away, take a break and make a better plan when you come back. Getting frustrated demotivates you and makes you feel like you're not making progress.

